name: "Runs migrations"
description: "Runs migrations for the given baseDir against the given instance name"
inputs:
  stage:
    description: "The stage for deployment (development|staging|production)"
    required: true

  baseDir:
    description: "The baseDir to compile"
    required: true

  postgres-username:
    description: "The username for the database"
    required: true

  postgres-password:
    description: "The password for the postgres user"
    required: true

  postgres-database:
    description: "The database name"
    required: true

  gcr-service-json:
    description: "The P12 credentials to login to GCR with"
    required: true

runs:
  using: "composite"
  steps:
    - name: Get the project id and instance name for this stage
      id: meta
      shell: bash
      run: |-
        export PROJECT_ID=$(make print.project_id stage=${{ inputs.stage }})
        echo "::set-output name=project_id::$(echo $PROJECT_ID)"
        export INSTANCE_NAME=$(make print.cloudsql_instance stage=${{ inputs.stage }} baseDir=${{ inputs.baseDir }})
        echo "::set-output name=cloudsql_instance::$(echo $INSTANCE_NAME)"

    - id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ inputs.gcr-service-json }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ steps.meta.outputs.project_id }}

    - name: Setup Cloud SQL proxy
      uses: mattes/gce-cloudsql-proxy-action@v1
      with:
        creds: ${{ inputs.gcr-service-json }}
        instance: ${{ steps.meta.outputs.cloudsql_instance }}

    - name: Run the migrations
      shell: bash
      run: |-
        export DATABASE_URL=postgresql://${{ inputs.postgres-username }}:${{ inputs.postgres-password }}@localhost:5432/${{ inputs.postgres-database }}
        make migrate.deploy baseDir=${{ inputs.baseDir }} stage=${{ inputs.stage }}
