name: Node QA

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
      baseDir:
        required: true
        type: string
      stage:
        required: true
        type: string
      tag:
        required: true
        type: string
      postgres:
        required: true
        type: boolean
    secrets:
      token:
        required: true
      artifact_registry_upload_key:
        required: false
      cloudrun_uploader_service_account:
        required: true

jobs:
  test:
    if: ${{ fromJSON(inputs.postgres) != true }}
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - uses: kadima-tech/actions/checkout@master
        with:
          submodules: recursive
          token: ${{ secrets.token }}

      - name: Run tests
        uses: kadima-tech/actions/test@master
        with:
          token: ${{ github.token }}
          baseDir: ${{ inputs.baseDir }}
 
  test-with-postgres:
    if: ${{ fromJSON(inputs.postgres) }}
    name: Run tests
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgresql://postgres:mysecretpassword@localhost:5432/test

    steps:
      - uses: kadima-tech/actions/checkout@master
        with:
          submodules: recursive
          token: ${{ secrets.token }}

      - name: Run tests
        uses: kadima-tech/actions/test@master
        with:
          token: ${{ github.token }}
          baseDir: ${{ inputs.baseDir }}
 
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

  install-and-deploy:
    needs: [test, test-with-postgres]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    if: |
      always() && 
      (needs.test-with-postgres.result == 'success' && needs.test.result == 'skipped') ||
      (needs.test-with-postgres.result == 'skipped' && needs.test.result == 'success')

    steps:
      - uses: kadima-tech/actions/checkout@master
        with:
          submodules: recursive
          token: ${{ secrets.token }}

      - name: Install NPM dependencies and compile app
        uses: kadima-tech/actions/compile@master
        with:
          baseDir: ${{ inputs.baseDir }}
          
      - name: Publish docker container
        uses: kadima-tech/actions/docker-push@master
        with:
          token: ${{ github.token }}
          gcr-service-json: ${{ secrets.artifact_registry_upload_key }}
          baseDir: ${{ inputs.baseDir }}
          project: ${{ inputs.project }}
          tag: ${{ inputs.tag }}

      - name: Deploy to Google
        uses: kadima-tech/actions/deploy-to-cloudrun@master
        with:
          baseDir: ${{ inputs.baseDir }}
          gcr-service-json: ${{ secrets.cloudrun_uploader_service_account }}
          stage: ${{ inputs.stage }}
          tag: ${{ inputs.tag }}
